{"version":3,"sources":["core/Menu.js","core/Base.js","backend.js","core/helper/Helper.js","core/Connections.js","core/Home.js","core/Relations.js","Routes.js","reportWebVitals.js","index.js"],"names":["currentTab","history","path","location","pathname","color","withRouter","className","style","to","Base","title","description","children","API","process","getPeople","fetch","method","then","res","json","catch","err","console","log","Connections","useState","person","connectedTo","error","success","peoples","connections","values","setValues","handleChange","name","event","value","target","onFind","connection","preventDefault","headers","body","JSON","stringify","data","useEffect","onChange","id","defaultValue","map","people","index","type","onClick","disabled","end","length","Timeline","align","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","start","variant","relation","renderRelation","Home","oldName","onAdd","Accept","addPeople","preload","onUpdate","updatePeople","onDelete","deletePeople","Relations","relatedTo","update","del","relations","addRelation","updateRelation","deleteRelation","a","Routes","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbb2097b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst currentTab = (history, path) => {\r\n  if (history.location.pathname === path) {\r\n    return { color: \"#198754\" };\r\n  } else {\r\n    return { color: \"#FFFFFF\" };\r\n  }\r\n};\r\n\r\nconst Menu = ({ history }) => {\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <ul className=\"nav\">\r\n          <li className=\"nav-item\">\r\n            <Link style={currentTab(history, \"/\")} className=\"nav-link\" to=\"/\">\r\n              Add People\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              style={currentTab(history, \"/relations\")}\r\n              className=\"nav-link\"\r\n              to=\"/relations\"\r\n            >\r\n              Relations\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              style={currentTab(history, \"/connection\")}\r\n              className=\"nav-link\"\r\n              to=\"/connection\"\r\n            >\r\n              Connection\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Menu);\r\n","import React from \"react\";\r\nimport Menu from \"./Menu\";\r\n\r\nconst Base = ({\r\n  title = \"Some Title\",\r\n  description = \"My Description\",\r\n  className = \"container bg-light text-white p-4\",\r\n  children,\r\n}) => {\r\n  return (\r\n    <div className=\"top\">\r\n      <Menu />\r\n      <div className=\"\">\r\n        <div className=\"jumbotron bg-secondary text-white text-center\">\r\n          <h2 className=\"display-4\">{title}</h2>\r\n          <p className=\"lead mb-0\">{description}</p>\r\n        </div>\r\n        <div className={className}>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Base;\r\n","export const API = process.env.REACT_APP_BACKEND;\r\n","import { API } from \"../../backend\";\r\n\r\nexport const addPeople = (name) => {\r\n  console.log(JSON.stringify(name));\r\n  return fetch(`${API}/api/person/add`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(name),\r\n  })\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const updatePeople = (name) => {\r\n  console.log(JSON.stringify(name));\r\n  return fetch(`${API}/api/person/update`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(name),\r\n  })\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const deletePeople = (name) => {\r\n  return fetch(`${API}/api/person/delete`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      //   Accept:\"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(name),\r\n  })\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const getPeople = () => {\r\n  return fetch(`${API}/api/person`, {\r\n    method: \"GET\",\r\n    // headers:{\r\n    //   Accept:\"application/json\",\r\n    //   \"Content-Type\":\"application/json\"\r\n    // }\r\n  })\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const addRelation = (relation) => {\r\n  return fetch(`${API}/api/relation/add`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(relation),\r\n  })\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const updateRelation = (relation) => {\r\n  return fetch(`${API}/api/relation/update`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(relation),\r\n  })\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const deleteRelation = (relation) => {\r\n  return fetch(`${API}/api/relation/delete`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(relation),\r\n  })\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const getRelations = () => {\r\n  return fetch(`${API}/api/relation`, {\r\n    method: \"GET\",\r\n    // headers: {\r\n    //   \"Content-Type\": \"application/json\",\r\n    // },\r\n  })\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const getConnection = (connection) => {\r\n  console.log(connection);\r\n  return fetch(`${API}/api/connection`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(connection),\r\n  })\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Base from \"./Base\";\r\nimport { getConnection, getPeople } from \"./helper/Helper\";\r\n\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\n\r\nconst Connections = () => {\r\n  const [values, setValues] = useState({\r\n    person: \"\",\r\n    connectedTo: \"\",\r\n    error: \"\",\r\n    success: false,\r\n    peoples: [],\r\n    connections: [],\r\n  });\r\n\r\n  const { person, connectedTo, error, success, peoples, connections } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    var value = event.target.value;\r\n    console.log(value);\r\n    // console.log(name);\r\n    if (value == \"Choose Person...\") {\r\n      value = \"\";\r\n      setValues({ ...values, [name]: value });\r\n    } else {\r\n      setValues({ ...values, [name]: value });\r\n    }\r\n  };\r\n\r\n  const onFind = (event) => {\r\n    event.preventDefault();\r\n    getConnection({ person, connectedTo })\r\n      .then((data) => {\r\n        console.log(data);\r\n        setValues({ ...values, success: true, connections: data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in find connection\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(connections);\r\n  }, [connections]);\r\n\r\n  const preload = () => {\r\n    getPeople()\r\n      .then((data) => {\r\n        setValues({ ...values, peoples: data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in preload connection\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload();\r\n  }, []);\r\n\r\n  const findConnectionForm = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-10 offset-sm-1\">\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-3 offset-sm-1 py-1\">\r\n                <label className=\"text-dark form-label \">Person</label>\r\n\r\n                <select\r\n                  onChange={handleChange(\"person\")}\r\n                  className=\"form-select\"\r\n                  id=\"autoSizingSelect\"\r\n                >\r\n                  <option defaultValue>Choose Person...</option>\r\n                  {peoples &&\r\n                    peoples.map((people, index) => {\r\n                      return (\r\n                        <option key={index} value={people}>\r\n                          {people}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"col-sm-3 offset-sm-1 py-1\">\r\n                <label className=\"text-dark form-label\">Related To</label>\r\n                <select\r\n                  onChange={handleChange(\"connectedTo\")}\r\n                  className=\"form-select\"\r\n                  id=\"autoSizingSelect\"\r\n                >\r\n                  <option defaultValue>Choose Person...</option>\r\n                  {peoples &&\r\n                    peoples.map((people, index) => {\r\n                      return (\r\n                        <option key={index} value={people}>\r\n                          {people}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n              <div className=\"d-grid col-sm-2 offset-sm-1 py-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={onFind}\r\n                  disabled={person == \"\" || connectedTo == \"\"}\r\n                  className=\"btn btn-success\"\r\n                >\r\n                  Find Connection\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderRelation = () => {\r\n    var end = \"\";\r\n    return (\r\n      <>\r\n        {success && connections.length != 0 && (\r\n          <>\r\n            <h2 className=\"text-dark text-center content\">CONNECTION</h2>\r\n            <Timeline align=\"alternate\">\r\n              {connections.map((connection, index) => {\r\n                end = connection.end;\r\n                return (\r\n                  <div>\r\n                    <TimelineItem key={index}>\r\n                      <TimelineSeparator>\r\n                        <TimelineDot color=\"secondary\" />\r\n                        <TimelineConnector />\r\n                      </TimelineSeparator>\r\n                      <TimelineContent className=\"text-dark\">\r\n                        {connection.start}\r\n                      </TimelineContent>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                      <TimelineSeparator>\r\n                        <TimelineDot variant=\"outlined\" />\r\n                        <TimelineConnector />\r\n                      </TimelineSeparator>\r\n                      <TimelineContent className=\"text-dark\">\r\n                        {connection.relation}\r\n                      </TimelineContent>\r\n                    </TimelineItem>\r\n                  </div>\r\n                );\r\n              })}\r\n              <TimelineItem>\r\n                <TimelineSeparator>\r\n                  <TimelineDot color=\"secondary\" />\r\n                </TimelineSeparator>\r\n                <TimelineContent className=\"text-dark\">{end}</TimelineContent>\r\n              </TimelineItem>\r\n            </Timeline>\r\n          </>\r\n        )}\r\n        {success && connections.length == 0 && (\r\n          <h2 className=\"text-dark text-center mt-5\">\r\n            {person} is not connected to {connectedTo}\r\n          </h2>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <Base title=\"Connections\" description=\"Know your connections here\">\r\n      {findConnectionForm()}\r\n      {renderRelation()}\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Connections;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Base from \"./Base\";\r\nimport {\r\n  addPeople,\r\n  deletePeople,\r\n  getPeople,\r\n  updatePeople,\r\n} from \"./helper/Helper\";\r\nimport \"../App.css\";\r\n\r\nconst Home = () => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    oldName: \"\",\r\n    error: \"\",\r\n    success: false,\r\n    peoples: [],\r\n  });\r\n\r\n  var { name, oldName, error, success, peoples } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const onAdd = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false });\r\n    console.log(name);\r\n    addPeople({ name })\r\n      .then((data) => {\r\n        // setValues({\r\n        //   ...values,\r\n        //   name: \"\",\r\n        //   error: \"\",\r\n        //   success: true,\r\n        // });\r\n        preload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in Add People\");\r\n      });\r\n  };\r\n\r\n  const onUpdate = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false });\r\n    console.log(name);\r\n    updatePeople({ name, oldName })\r\n      .then((data) => {\r\n        // setValues({\r\n        //   ...values,\r\n        //   name: \"\",\r\n        //   oldName: \"\",\r\n        //   error: \"\",\r\n        //   success: true,\r\n        // });\r\n        preload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in Update People\");\r\n      });\r\n  };\r\n\r\n  const onDelete = (name) => {\r\n    // event.preventDefault();\r\n    setValues({ ...values, error: false });\r\n    console.log(name);\r\n    deletePeople({ name })\r\n      .then((data) => {\r\n        setValues({\r\n          ...values,\r\n          name: \"\",\r\n          error: \"\",\r\n          success: true,\r\n        });\r\n        preload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in Delete People\");\r\n      });\r\n  };\r\n\r\n  const preload = () => {\r\n    getPeople()\r\n      .then((data) => {\r\n        setValues({\r\n          ...values,\r\n          peoples: data,\r\n          name: \"\",\r\n          error: \"\",\r\n          oldName: \"\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in Preload People\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload();\r\n  }, []);\r\n\r\n  const successMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <div\r\n            className=\"alert alert-success\"\r\n            style={{ display: success ? \"\" : \"none\" }}\r\n          >\r\n            New Account was created successfully. Please{\" \"}\r\n            <Link to=\"/signin\">Login Here</Link>{\" \"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n          >\r\n            {error}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const addPeopleForm = () => {\r\n    return (\r\n      <>\r\n        <div className=\"row mt-0\">\r\n          <div className=\"col-md-10 offset-sm-1\">\r\n            <form>\r\n              <div className=\"row\">\r\n                <label className=\"col-sm-2 text-dark col-form-label col-form-label-lg py-2\">\r\n                  Name\r\n                </label>\r\n                <div className=\"col-sm-6 py-2\">\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    onChange={handleChange(\"name\")}\r\n                    value={name}\r\n                  />\r\n                </div>\r\n                <div className=\"d-grid col-sm-2 py-2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={onAdd}\r\n                    disabled={!name}\r\n                    className=\"btn btn-success btn-block\"\r\n                  >\r\n                    Add {name}\r\n                  </button>\r\n                </div>\r\n                <div className=\"d-grid col-sm-2 py-2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={onUpdate}\r\n                    disabled={!name}\r\n                    className=\"btn btn-success btn-block\"\r\n                  >\r\n                    Update {name}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"row content\">\r\n          <h2 className=\"text-dark text-center\">PEOPLES</h2>\r\n          {peoples &&\r\n            peoples.map((people, index) => {\r\n              return (\r\n                <div className=\"col-md-3 mt-4\" key={index}>\r\n                  <div className=\"shadow rounded\">\r\n                    <div className=\"card bg-dark\">\r\n                      <div className=\"card-body text-center\">\r\n                        <h5 className=\"card-title mb-2\">{people}</h5>\r\n                        <div className=\"row\">\r\n                          <div className=\" d-grid col-6\">\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                setValues({\r\n                                  ...values,\r\n                                  name: people,\r\n                                  oldName: people,\r\n                                });\r\n                              }}\r\n                              className=\"btn btn-warning btn-block mt-3\"\r\n                            >\r\n                              Edit\r\n                            </button>\r\n                          </div>\r\n                          <div className=\"d-grid col-6\">\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                onDelete(people);\r\n                              }}\r\n                              className=\"btn btn-danger btn-block mt-3\"\r\n                            >\r\n                              Delete\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base title=\"Add People\" description=\"You can add more people here\">\r\n      {addPeopleForm()}\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Base from \"./Base\";\r\nimport {\r\n  getPeople,\r\n  addRelation,\r\n  getRelations,\r\n  updateRelation,\r\n  deleteRelation,\r\n} from \"./helper/Helper\";\r\n\r\nconst Relations = () => {\r\n  const [values, setValues] = useState({\r\n    person: \"\",\r\n    relatedTo: \"\",\r\n    relation: \"\",\r\n    error: \"\",\r\n    success: false,\r\n    update: false,\r\n    del: false,\r\n    peoples: [],\r\n    relations: [],\r\n  });\r\n\r\n  const {\r\n    person,\r\n    relatedTo,\r\n    relation,\r\n    error,\r\n    success,\r\n    update,\r\n    del,\r\n    peoples,\r\n    relations,\r\n  } = values;\r\n\r\n  const onAdd = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false });\r\n\r\n    addRelation({ person, relatedTo, relation })\r\n      .then((data) => {\r\n        setValues({\r\n          ...values,\r\n          person: \"\",\r\n          relatedTo: \"\",\r\n          relation: \"\",\r\n          success: true,\r\n        });\r\n        preload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in add relation\");\r\n      });\r\n  };\r\n  const onUpdate = (event) => {\r\n    // event.preventDefault();\r\n    // setValues({ ...values, error: false });\r\n    console.log({ person, relatedTo, relation });\r\n\r\n    updateRelation({ person, relatedTo, relation })\r\n      .then((data) => {\r\n        setValues({\r\n          ...values,\r\n          person: \"\",\r\n          relatedTo: \"\",\r\n          relation: \"\",\r\n          success: true,\r\n          update: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in Update relation\");\r\n      });\r\n  };\r\n\r\n  const onDelete = (person, relatedTo, relation) => {\r\n    // event.preventDefault();\r\n    console.log({ person, relatedTo, relation });\r\n\r\n    deleteRelation({ person, relatedTo, relation })\r\n      .then((data) => {\r\n        setValues({\r\n          ...values,\r\n          success: true,\r\n        });\r\n        preload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in Delete relation\");\r\n      });\r\n  };\r\n\r\n  const handleChange = (name) => (event) => {\r\n    var value = event.target.value;\r\n    console.log(value);\r\n    if (value == \"Choose Person...\" || value == \"Choose Relation...\") {\r\n      value = \"\";\r\n      setValues({ ...values, [name]: value });\r\n    } else {\r\n      setValues({ ...values, [name]: value });\r\n    }\r\n  };\r\n\r\n  const preload = async () => {\r\n    const people = await getPeople()\r\n      .then((data) => {\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in People\");\r\n      });\r\n    const relation = await getRelations()\r\n      .then((data) => {\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in relation\");\r\n      });\r\n\r\n    setValues({ ...values, peoples: people, relations: relation });\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload();\r\n  }, [update]);\r\n\r\n  const addRelationForm = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-10 offset-sm-1\">\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-3 py-1\">\r\n                <label className=\"text-dark form-label \">Person</label>\r\n\r\n                <select\r\n                  onChange={handleChange(\"person\")}\r\n                  className=\"form-select\"\r\n                  id=\"autoSizingSelect\"\r\n                >\r\n                  <option defaultValue>Choose Person...</option>\r\n                  {peoples &&\r\n                    peoples.map((people, index) => {\r\n                      return (\r\n                        <option key={index} value={people}>\r\n                          {people}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"col-sm-3 py-1\">\r\n                <label className=\"text-dark form-label \">Relation</label>\r\n\r\n                <select\r\n                  onChange={handleChange(\"relation\")}\r\n                  className=\"form-select\"\r\n                  id=\"autoSizingSelect\"\r\n                >\r\n                  <option defaultValue>Choose Relation...</option>\r\n                  <option value=\"Friend\">Friend</option>\r\n                  <option value=\"Son\">Son</option>\r\n                  <option value=\"Brother\">Brother</option>\r\n                  <option value=\"Sister\">Sister</option>\r\n                  <option value=\"Father\">Father</option>\r\n                  <option value=\"Mother\">Mother</option>\r\n                  <option value=\"Grand Father\">Grand Father</option>\r\n                  <option value=\"Grand Mother\">Grand Mother</option>\r\n                  <option value=\"Uncle\">Uncle</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"col-sm-3 py-1\">\r\n                <label className=\"text-dark form-label\">Related To</label>\r\n                <select\r\n                  onChange={handleChange(\"relatedTo\")}\r\n                  className=\"form-select\"\r\n                  id=\"autoSizingSelect\"\r\n                >\r\n                  <option defaultValue>Choose Person...</option>\r\n                  {peoples &&\r\n                    peoples.map((people, index) => {\r\n                      return (\r\n                        <option key={index} value={people}>\r\n                          {people}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n              <div className=\"d-grid col-sm-2 offset-sm-1 py-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={onAdd}\r\n                  disabled={!person || !relatedTo || !relation}\r\n                  className=\"btn btn-success\"\r\n                >\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const updateRelationForm = () => {\r\n    return (\r\n      <div className=\"row content\">\r\n        <div className=\"col-md-10 offset-sm-1\">\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-3 py-1\">\r\n                <label className=\"text-dark form-label\">Person</label>\r\n\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  onChange={handleChange(\"person\")}\r\n                  value={person}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-3 py-1\">\r\n                <label className=\"text-dark form-label\">Relation</label>\r\n\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  onChange={handleChange(\"relation\")}\r\n                  value={relation}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-3 py-1\">\r\n                <label className=\"text-dark form-label\">Related To</label>\r\n\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  onChange={handleChange(\"relatedTo\")}\r\n                  value={relatedTo}\r\n                />\r\n              </div>\r\n              <div className=\"d-grid col-sm-2 offset-sm-1 py-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={onUpdate}\r\n                  disabled={person == \"\" || relatedTo == \"\" || relation == \"\"}\r\n                  className=\"btn btn-success\"\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const relationsRender = () => {\r\n    return (\r\n      <div className=\"row text-center\">\r\n        <h2 className=\"mt-3 text-dark\">RELATIONSHIPS</h2>\r\n\r\n        {relations &&\r\n          relations.map((relation, index) => {\r\n            return (\r\n              <div key={index} className=\"col-sm-10 offset-sm-1 mt-4\">\r\n                <div className=\"shadow rounded\">\r\n                  <div className=\"card bg-dark \">\r\n                    <div className=\"card-body p-2\">\r\n                      <div className=\"row\">\r\n                        <div className=\"card-title col-sm-7 py-1\">\r\n                          <h4 className=\"mb-0\">\r\n                            {relation.start} is {relation.relation} of{\" \"}\r\n                            {relation.end}\r\n                          </h4>\r\n                        </div>\r\n                        <div className=\"d-grid col-6 col-sm-2 py-2\">\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              setValues({\r\n                                ...values,\r\n                                person: relation.start,\r\n                                relatedTo: relation.end,\r\n                                relation: relation.relation,\r\n                                error: false,\r\n                                update: true,\r\n                              });\r\n                            }}\r\n                            className=\"btn btn-warning\"\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"d-grid col-6 col-sm-2 py-2\">\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              onDelete(\r\n                                relation.start,\r\n                                relation.end,\r\n                                relation.relation\r\n                              );\r\n                            }}\r\n                            className=\"btn btn-danger\"\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base title=\"Relation\" description=\"Know/Add your relations here\">\r\n      {addRelationForm()}\r\n      {update && updateRelationForm()}\r\n      {relationsRender()}\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Relations;\r\n","import React from \"react\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport Connections from \"./core/Connections\";\r\nimport Home from \"./core/Home\";\r\nimport Relations from \"./core/Relations\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/connection\" exact component={Connections} />\r\n        <Route path=\"/relations\" exact component={Relations} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from \"./Routes\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Routes/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}