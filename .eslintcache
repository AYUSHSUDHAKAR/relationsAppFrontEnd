[{"C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\index.js":"1","C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\App.js":"2","C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\reportWebVitals.js":"3","C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\Routes.js":"4","C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\core\\Home.js":"5","C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\core\\Connections.js":"6","C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\core\\Relations.js":"7","C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\core\\Menu.js":"8","C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\core\\Base.js":"9","C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\core\\helper\\Helper.js":"10","C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\backend.js":"11"},{"size":462,"mtime":1611857529707,"results":"12","hashOfConfig":"13"},{"size":528,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":542,"mtime":1611857597813,"results":"16","hashOfConfig":"13"},{"size":6619,"mtime":1617346465270,"results":"17","hashOfConfig":"13"},{"size":5438,"mtime":1617348444855,"results":"18","hashOfConfig":"13"},{"size":10297,"mtime":1617348416703,"results":"19","hashOfConfig":"13"},{"size":1215,"mtime":1612096694951,"results":"20","hashOfConfig":"13"},{"size":596,"mtime":1617290400386,"results":"21","hashOfConfig":"13"},{"size":3211,"mtime":1617306607790,"results":"22","hashOfConfig":"13"},{"size":51,"mtime":1612083158397,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"8f9r01",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\index.js",[],["51","52"],"C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\App.js",[],["53","54"],"C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\reportWebVitals.js",[],"C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\Routes.js",[],"C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\core\\Home.js",["55","56","57"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Base from \"./Base\";\r\nimport {\r\n  addPeople,\r\n  deletePeople,\r\n  getPeople,\r\n  updatePeople,\r\n} from \"./helper/Helper\";\r\nimport \"../App.css\";\r\n\r\nconst Home = () => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    oldName: \"\",\r\n    error: \"\",\r\n    success: false,\r\n    peoples: [],\r\n  });\r\n\r\n  var { name, oldName, error, success, peoples } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const onAdd = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false });\r\n    console.log(name);\r\n    addPeople({ name })\r\n      .then((data) => {\r\n        // setValues({\r\n        //   ...values,\r\n        //   name: \"\",\r\n        //   error: \"\",\r\n        //   success: true,\r\n        // });\r\n        preload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in Add People\");\r\n      });\r\n  };\r\n\r\n  const onUpdate = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false });\r\n    console.log(name);\r\n    updatePeople({ name, oldName })\r\n      .then((data) => {\r\n        // setValues({\r\n        //   ...values,\r\n        //   name: \"\",\r\n        //   oldName: \"\",\r\n        //   error: \"\",\r\n        //   success: true,\r\n        // });\r\n        preload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in Update People\");\r\n      });\r\n  };\r\n\r\n  const onDelete = (name) => {\r\n    // event.preventDefault();\r\n    setValues({ ...values, error: false });\r\n    console.log(name);\r\n    deletePeople({ name })\r\n      .then((data) => {\r\n        setValues({\r\n          ...values,\r\n          name: \"\",\r\n          error: \"\",\r\n          success: true,\r\n        });\r\n        preload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in Delete People\");\r\n      });\r\n  };\r\n\r\n  const preload = () => {\r\n    getPeople()\r\n      .then((data) => {\r\n        setValues({\r\n          ...values,\r\n          peoples: data,\r\n          name: \"\",\r\n          error: \"\",\r\n          oldName: \"\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in Preload People\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload();\r\n  }, []);\r\n\r\n  const successMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <div\r\n            className=\"alert alert-success\"\r\n            style={{ display: success ? \"\" : \"none\" }}\r\n          >\r\n            New Account was created successfully. Please{\" \"}\r\n            <Link to=\"/signin\">Login Here</Link>{\" \"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n          >\r\n            {error}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const addPeopleForm = () => {\r\n    return (\r\n      <>\r\n        <div className=\"row mt-0\">\r\n          <div className=\"col-md-10 offset-sm-1\">\r\n            <form>\r\n              <div className=\"row\">\r\n                <label className=\"col-sm-2 text-dark col-form-label col-form-label-lg py-2\">\r\n                  Name\r\n                </label>\r\n                <div className=\"col-sm-6 py-2\">\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    onChange={handleChange(\"name\")}\r\n                    value={name}\r\n                  />\r\n                </div>\r\n                <div className=\"d-grid col-sm-2 py-2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={onAdd}\r\n                    disabled={!name}\r\n                    className=\"btn btn-success btn-block\"\r\n                  >\r\n                    Add {name}\r\n                  </button>\r\n                </div>\r\n                <div className=\"d-grid col-sm-2 py-2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={onUpdate}\r\n                    disabled={!name}\r\n                    className=\"btn btn-success btn-block\"\r\n                  >\r\n                    Update {name}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"row content\">\r\n          <h2 className=\"text-dark text-center\">PEOPLES</h2>\r\n          {peoples &&\r\n            peoples.map((people, index) => {\r\n              return (\r\n                <div className=\"col-md-3 mt-4\" key={index}>\r\n                  <div className=\"shadow rounded\">\r\n                    <div className=\"card bg-dark\">\r\n                      <div className=\"card-body text-center\">\r\n                        <h5 className=\"card-title mb-2\">{people}</h5>\r\n                        <div className=\"row\">\r\n                          <div className=\" d-grid col-6\">\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                setValues({\r\n                                  ...values,\r\n                                  name: people,\r\n                                  oldName: people,\r\n                                });\r\n                              }}\r\n                              className=\"btn btn-warning btn-block mt-3\"\r\n                            >\r\n                              Edit\r\n                            </button>\r\n                          </div>\r\n                          <div className=\"d-grid col-6\">\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                onDelete(people);\r\n                              }}\r\n                              className=\"btn btn-danger btn-block mt-3\"\r\n                            >\r\n                              Delete\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base title=\"Add People\" description=\"You can add more people here\">\r\n      {addPeopleForm()}\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\core\\Connections.js",["58","59","60","61","62","63","64"],"import React, { useState, useEffect } from \"react\";\r\nimport Base from \"./Base\";\r\nimport { getConnection, getPeople } from \"./helper/Helper\";\r\n\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\n\r\nconst Connections = () => {\r\n  const [values, setValues] = useState({\r\n    person: \"\",\r\n    connectedTo: \"\",\r\n    error: \"\",\r\n    success: false,\r\n    peoples: [],\r\n    connections: [],\r\n  });\r\n\r\n  const { person, connectedTo, error, success, peoples, connections } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    var value = event.target.value;\r\n    console.log(value);\r\n    // console.log(name);\r\n    if (value == \"Choose Person...\") {\r\n      value = \"\";\r\n      setValues({ ...values, [name]: value });\r\n    } else {\r\n      setValues({ ...values, [name]: value });\r\n    }\r\n  };\r\n\r\n  const onFind = (event) => {\r\n    event.preventDefault();\r\n    getConnection({ person, connectedTo })\r\n      .then((data) => {\r\n        setValues({ ...values, success: true, connections: data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in find connection\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(connections);\r\n  }, [connections]);\r\n\r\n  const preload = () => {\r\n    getPeople()\r\n      .then((data) => {\r\n        setValues({ ...values, peoples: data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in preload connection\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload();\r\n  }, []);\r\n\r\n  const findConnectionForm = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-10 offset-sm-1\">\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-3 offset-sm-1 py-1\">\r\n                <label className=\"text-dark form-label \">Person</label>\r\n\r\n                <select\r\n                  onChange={handleChange(\"person\")}\r\n                  className=\"form-select\"\r\n                  id=\"autoSizingSelect\"\r\n                >\r\n                  <option defaultValue>Choose Person...</option>\r\n                  {peoples &&\r\n                    peoples.map((people, index) => {\r\n                      return (\r\n                        <option key={index} value={people}>\r\n                          {people}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"col-sm-3 offset-sm-1 py-1\">\r\n                <label className=\"text-dark form-label\">Related To</label>\r\n                <select\r\n                  onChange={handleChange(\"connectedTo\")}\r\n                  className=\"form-select\"\r\n                  id=\"autoSizingSelect\"\r\n                >\r\n                  <option defaultValue>Choose Person...</option>\r\n                  {peoples &&\r\n                    peoples.map((people, index) => {\r\n                      return (\r\n                        <option key={index} value={people}>\r\n                          {people}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n              <div className=\"d-grid col-sm-2 offset-sm-1 py-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={onFind}\r\n                  disabled={person == \"\" || connectedTo == \"\"}\r\n                  className=\"btn btn-success\"\r\n                >\r\n                  Find Connection\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderRelation = () => {\r\n    var end = \"\";\r\n    return (\r\n      <>\r\n        {success && connections.length != 0 && (\r\n          <>\r\n            <h2 className=\"text-dark text-center content\">CONNECTION</h2>\r\n            <Timeline align=\"alternate\">\r\n              {connections.map((connection, index) => {\r\n                end = connection.end;\r\n                return (\r\n                  <TimelineItem key={index}>\r\n                    <TimelineSeparator>\r\n                      <TimelineDot color=\"secondary\" />\r\n                      <TimelineConnector />\r\n                    </TimelineSeparator>\r\n                    <TimelineContent className=\"text-dark\">\r\n                      {connection.start}\r\n                    </TimelineContent>\r\n                  </TimelineItem>\r\n                );\r\n              })}\r\n              <TimelineItem>\r\n                <TimelineSeparator>\r\n                  <TimelineDot color=\"secondary\" />\r\n                </TimelineSeparator>\r\n                <TimelineContent className=\"text-dark\">{end}</TimelineContent>\r\n              </TimelineItem>\r\n            </Timeline>\r\n          </>\r\n        )}\r\n        {success && connections.length == 0 && (\r\n          <h2 className=\"text-dark text-center mt-5\">\r\n            {person} is not connected to {connectedTo}\r\n          </h2>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <Base title=\"Connections\" description=\"Know your connections here\">\r\n      {findConnectionForm()}\r\n      {renderRelation()}\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Connections;\r\n","C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\core\\Relations.js",["65","66","67","68","69","70","71","72","73"],"import React, { useState, useEffect } from \"react\";\r\nimport Base from \"./Base\";\r\nimport {\r\n  getPeople,\r\n  addRelation,\r\n  getRelations,\r\n  updateRelation,\r\n  deleteRelation,\r\n} from \"./helper/Helper\";\r\n\r\nconst Relations = () => {\r\n  const [values, setValues] = useState({\r\n    person: \"\",\r\n    relatedTo: \"\",\r\n    relation: \"\",\r\n    error: \"\",\r\n    success: false,\r\n    update: false,\r\n    del: false,\r\n    peoples: [],\r\n    relations: [],\r\n  });\r\n\r\n  const {\r\n    person,\r\n    relatedTo,\r\n    relation,\r\n    error,\r\n    success,\r\n    update,\r\n    del,\r\n    peoples,\r\n    relations,\r\n  } = values;\r\n\r\n  const onAdd = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false });\r\n\r\n    addRelation({ person, relatedTo, relation })\r\n      .then((data) => {\r\n        setValues({\r\n          ...values,\r\n          person: \"\",\r\n          relatedTo: \"\",\r\n          relation: \"\",\r\n          success: true,\r\n        });\r\n        preload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in add relation\");\r\n      });\r\n  };\r\n  const onUpdate = (event) => {\r\n    // event.preventDefault();\r\n    // setValues({ ...values, error: false });\r\n    console.log({ person, relatedTo, relation });\r\n\r\n    updateRelation({ person, relatedTo, relation })\r\n      .then((data) => {\r\n        setValues({\r\n          ...values,\r\n          person: \"\",\r\n          relatedTo: \"\",\r\n          relation: \"\",\r\n          success: true,\r\n          update: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in Update relation\");\r\n      });\r\n  };\r\n\r\n  const onDelete = (person, relatedTo, relation) => {\r\n    // event.preventDefault();\r\n    console.log({ person, relatedTo, relation });\r\n\r\n    deleteRelation({ person, relatedTo, relation })\r\n      .then((data) => {\r\n        setValues({\r\n          ...values,\r\n          success: true,\r\n        });\r\n        preload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in Delete relation\");\r\n      });\r\n  };\r\n\r\n  const handleChange = (name) => (event) => {\r\n    var value = event.target.value;\r\n    console.log(value);\r\n    if (value == \"Choose Person...\" || value == \"Choose Relation...\") {\r\n      value = \"\";\r\n      setValues({ ...values, [name]: value });\r\n    } else {\r\n      setValues({ ...values, [name]: value });\r\n    }\r\n  };\r\n\r\n  const preload = async () => {\r\n    const people = await getPeople()\r\n      .then((data) => {\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in People\");\r\n      });\r\n    const relation = await getRelations()\r\n      .then((data) => {\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in relation\");\r\n      });\r\n\r\n    setValues({ ...values, peoples: people, relations: relation });\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload();\r\n  }, [update]);\r\n\r\n  const addRelationForm = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-10 offset-sm-1\">\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-3 py-1\">\r\n                <label className=\"text-dark form-label \">Person</label>\r\n\r\n                <select\r\n                  onChange={handleChange(\"person\")}\r\n                  className=\"form-select\"\r\n                  id=\"autoSizingSelect\"\r\n                >\r\n                  <option defaultValue>Choose Person...</option>\r\n                  {peoples &&\r\n                    peoples.map((people, index) => {\r\n                      return (\r\n                        <option key={index} value={people}>\r\n                          {people}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"col-sm-3 py-1\">\r\n                <label className=\"text-dark form-label \">Relation</label>\r\n\r\n                <select\r\n                  onChange={handleChange(\"relation\")}\r\n                  className=\"form-select\"\r\n                  id=\"autoSizingSelect\"\r\n                >\r\n                  <option defaultValue>Choose Relation...</option>\r\n                  <option value=\"Friend\">Friend</option>\r\n                  <option value=\"Son\">Son</option>\r\n                  <option value=\"Brother\">Brother</option>\r\n                  <option value=\"Sister\">Sister</option>\r\n                  <option value=\"Father\">Father</option>\r\n                  <option value=\"Mother\">Mother</option>\r\n                  <option value=\"Grand Father\">Grand Father</option>\r\n                  <option value=\"Grand Mother\">Grand Mother</option>\r\n                  <option value=\"Uncle\">Uncle</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"col-sm-3 py-1\">\r\n                <label className=\"text-dark form-label\">Related To</label>\r\n                <select\r\n                  onChange={handleChange(\"relatedTo\")}\r\n                  className=\"form-select\"\r\n                  id=\"autoSizingSelect\"\r\n                >\r\n                  <option defaultValue>Choose Person...</option>\r\n                  {peoples &&\r\n                    peoples.map((people, index) => {\r\n                      return (\r\n                        <option key={index} value={people}>\r\n                          {people}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n              <div className=\"d-grid col-sm-2 offset-sm-1 py-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={onAdd}\r\n                  disabled={!person || !relatedTo || !relation}\r\n                  className=\"btn btn-success\"\r\n                >\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const updateRelationForm = () => {\r\n    return (\r\n      <div className=\"row content\">\r\n        <div className=\"col-md-10 offset-sm-1\">\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-3 py-1\">\r\n                <label className=\"text-dark form-label\">Person</label>\r\n\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  onChange={handleChange(\"person\")}\r\n                  value={person}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-3 py-1\">\r\n                <label className=\"text-dark form-label\">Relation</label>\r\n\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  onChange={handleChange(\"relation\")}\r\n                  value={relation}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-3 py-1\">\r\n                <label className=\"text-dark form-label\">Related To</label>\r\n\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  onChange={handleChange(\"relatedTo\")}\r\n                  value={relatedTo}\r\n                />\r\n              </div>\r\n              <div className=\"d-grid col-sm-2 offset-sm-1 py-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={onUpdate}\r\n                  disabled={person == \"\" || relatedTo == \"\" || relation == \"\"}\r\n                  className=\"btn btn-success\"\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const relationsRender = () => {\r\n    return (\r\n      <div className=\"row text-center\">\r\n        <h2 className=\"mt-3 text-dark\">RELATIONSHIPS</h2>\r\n\r\n        {relations &&\r\n          relations.map((relation, index) => {\r\n            return (\r\n              <div key={index} className=\"col-sm-10 offset-sm-1 mt-4\">\r\n                <div className=\"shadow rounded\">\r\n                  <div className=\"card bg-dark \">\r\n                    <div className=\"card-body p-2\">\r\n                      <div className=\"row\">\r\n                        <div className=\"card-title col-sm-7 py-1\">\r\n                          <h4 className=\"mb-0\">\r\n                            {relation.start} is {relation.relation} of{\" \"}\r\n                            {relation.end}\r\n                          </h4>\r\n                        </div>\r\n                        <div className=\"d-grid col-6 col-sm-2 py-2\">\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              setValues({\r\n                                ...values,\r\n                                person: relation.start,\r\n                                relatedTo: relation.end,\r\n                                relation: relation.relation,\r\n                                error: false,\r\n                                update: true,\r\n                              });\r\n                            }}\r\n                            className=\"btn btn-warning\"\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"d-grid col-6 col-sm-2 py-2\">\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              onDelete(\r\n                                relation.start,\r\n                                relation.end,\r\n                                relation.relation\r\n                              );\r\n                            }}\r\n                            className=\"btn btn-danger\"\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base title=\"Relation\" description=\"Know/Add your relations here\">\r\n      {addRelationForm()}\r\n      {update && updateRelationForm()}\r\n      {relationsRender()}\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Relations;\r\n","C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\core\\Menu.js",[],"C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\core\\Base.js",[],"C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\core\\helper\\Helper.js",[],"C:\\Users\\Ayush\\Desktop\\task\\relationapp\\src\\backend.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":103,"column":6,"nodeType":"82","endLine":103,"endColumn":8,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":105,"column":9,"nodeType":"86","messageId":"87","endLine":105,"endColumn":23},{"ruleId":"84","severity":1,"message":"88","line":121,"column":9,"nodeType":"86","messageId":"87","endLine":121,"endColumn":21},{"ruleId":"84","severity":1,"message":"89","line":22,"column":32,"nodeType":"86","messageId":"87","endLine":22,"endColumn":37},{"ruleId":"90","severity":1,"message":"91","line":28,"column":15,"nodeType":"92","messageId":"93","endLine":28,"endColumn":17},{"ruleId":"80","severity":1,"message":"81","line":63,"column":6,"nodeType":"82","endLine":63,"endColumn":8,"suggestions":"94"},{"ruleId":"90","severity":1,"message":"91","line":113,"column":36,"nodeType":"92","messageId":"93","endLine":113,"endColumn":38},{"ruleId":"90","severity":1,"message":"91","line":113,"column":57,"nodeType":"92","messageId":"93","endLine":113,"endColumn":59},{"ruleId":"90","severity":1,"message":"95","line":130,"column":40,"nodeType":"92","messageId":"93","endLine":130,"endColumn":42},{"ruleId":"90","severity":1,"message":"91","line":157,"column":40,"nodeType":"92","messageId":"93","endLine":157,"endColumn":42},{"ruleId":"84","severity":1,"message":"89","line":28,"column":5,"nodeType":"86","messageId":"87","endLine":28,"endColumn":10},{"ruleId":"84","severity":1,"message":"96","line":29,"column":5,"nodeType":"86","messageId":"87","endLine":29,"endColumn":12},{"ruleId":"84","severity":1,"message":"97","line":31,"column":5,"nodeType":"86","messageId":"87","endLine":31,"endColumn":8},{"ruleId":"90","severity":1,"message":"91","line":96,"column":15,"nodeType":"92","messageId":"93","endLine":96,"endColumn":17},{"ruleId":"90","severity":1,"message":"91","line":96,"column":46,"nodeType":"92","messageId":"93","endLine":96,"endColumn":48},{"ruleId":"80","severity":1,"message":"81","line":125,"column":6,"nodeType":"82","endLine":125,"endColumn":14,"suggestions":"98"},{"ruleId":"90","severity":1,"message":"91","line":249,"column":36,"nodeType":"92","messageId":"93","endLine":249,"endColumn":38},{"ruleId":"90","severity":1,"message":"91","line":249,"column":55,"nodeType":"92","messageId":"93","endLine":249,"endColumn":57},{"ruleId":"90","severity":1,"message":"91","line":249,"column":72,"nodeType":"92","messageId":"93","endLine":249,"endColumn":74},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],["99"],["100"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.","ArrayExpression",["101"],"no-unused-vars","'successMessage' is assigned a value but never used.","Identifier","unusedVar","'errorMessage' is assigned a value but never used.","'error' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["102"],"Expected '!==' and instead saw '!='.","'success' is assigned a value but never used.","'del' is assigned a value but never used.",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"104","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [preload]",{"range":"109","text":"110"},{"range":"111","text":"110"},"Update the dependencies array to be: [preload, update]",{"range":"112","text":"113"},[2318,2320],"[preload]",[1761,1763],[2843,2851],"[preload, update]"]